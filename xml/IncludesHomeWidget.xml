<?xml version="1.0" encoding="utf-8"?>
<includes>
    <include name="HomeWidgetDisplay">
        <control type="group" id="9003">
            <onup>21</onup>
            <ondown condition="Skin.HasSetting(LowerMainMenuBar)">9002</ondown>
            <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(DisableGlobalSearch) + !Skin.HasSetting(FloorGlobalSearch)">610</ondown>
            <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + [Skin.HasSetting(DisableGlobalSearch) | Skin.HasSetting(FloorGlobalSearch)]">603</ondown>
            <visible>!Window.IsVisible(Favourites)</visible>
            <include>VisibleFadeEffect</include>
            <animation effect="fade" time="225" delay="1000">WindowOpen</animation>
            <animation effect="fade" time="150">WindowClose</animation>
            <control type="group">
                <!-- Recent Movies -->
                <left>285</left>
                <top>90</top>
                <visible>Library.HasContent(Movies)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentMovies)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8000</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">RecentVideoContent</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8000</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Library.HasContent(Movies)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentMovies)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8001</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">RecentVideoContent</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8001</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <!-- Recent Movies (includes watched) -->
                <left>285</left>
                <top>90</top>
                <visible>Library.HasContent(Movies)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentMoviesWatched)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8041</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">RecentWithWatchedVideoContent</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8041</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Library.HasContent(Movies)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentMoviesWatched)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8042</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">RecentWithWatchedVideoContent</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8042</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <!-- Random Movies -->
            <control type="group">
                <left>285</left>
                <top>90</top>
                <visible>Library.HasContent(Movies)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RandomMovies)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8002</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">RandomVideoContent</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8002</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Library.HasContent(Movies)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RandomMovies)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8003</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">RandomVideoContent</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8003</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <!-- Suggested Movies -->
            <control type="group">
                <left>285</left>
                <top>90</top>
                <visible>Library.HasContent(Movies)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),SuggestedMovies)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8004</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">SuggestedVideoContent</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8004</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Library.HasContent(Movies)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),SuggestedMovies)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8005</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">SuggestedVideoContent</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8005</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <!-- Unwatched Movies -->
            <control type="group">
                <left>285</left>
                <top>90</top>
                <visible>Library.HasContent(Movies)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),UnWatchedMovies)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8006</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">HomeUnWatchedMovies</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8006</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Library.HasContent(Movies)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),UnWatchedMovies)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8007</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">HomeUnWatchedMovies</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8007</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <!-- Recent Episodes -->
            <control type="group">
                <!-- TVShows -->
                <left>240</left>
                <top>90</top>
                <visible>Library.HasContent(TVShows)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentEpisodes)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8008</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                    <param name="Content">RecentTVShowContent</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8008</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Library.HasContent(TVShows)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentEpisodes)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8009</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">RecentTVShowContent</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8009</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <!-- Recent Episodes (including watched) -->
            <control type="group">
                <!-- TVShows -->
                <left>240</left>
                <top>90</top>
                <visible>Library.HasContent(TVShows)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentEpisodesWatched)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8043</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                    <param name="Content">RecentWithWatchedTVShowContent</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8043</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Library.HasContent(TVShows)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentEpisodesWatched)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8044</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">RecentWithWatchedTVShowContent</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8044</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <!-- Random Episodes -->
            <control type="group">
                <left>240</left>
                <top>90</top>
                <visible>Library.HasContent(TVShows)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RandomEpisodes)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8010</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                    <param name="Content">RandomTVShowContent</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8010</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Library.HasContent(TVShows)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RandomEpisodes)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8011</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">RandomTVShowContent</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8011</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <!-- Suggested Episodes -->
            <control type="group">
                <left>240</left>
                <top>90</top>
                <visible>Library.HasContent(TVShows)</visible>
                <visible>System.HasAddon(service.skin.widgets)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),SuggestedEpisodes)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8012</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">SuggestedTVShowContent</param>
                    <param name="episodeswidget">true</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8012</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Library.HasContent(TVShows)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),SuggestedEpisodes)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8013</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">SuggestedTVShowContent</param>
                    <param name="episodeswidget">true</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8013</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <!-- Recent Albums -->
            <control type="group">
                <!-- Music -->
                <left>360</left>
                <top>90</top>
                <visible>Library.HasContent(Music)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentAlbums)</visible>
                <include>VisibleFadeEffect</include>
                <include content="MusicSmallWidgetLayout">
                    <param name="Control">8014</param>
                    <param name="Content">RecentAlbumContent</param>
                </include>
                <include content="SmallWidgetAlbumButtons">
                    <param name="Control">8014</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Library.HasContent(Music)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentAlbums)</visible>
                <include>VisibleFadeEffect</include>
                <include content="MusicLargeWidgetLayout">
                    <param name="Control">8015</param>
                    <param name="Content">RecentAlbumContent</param>
                </include>
                <include content="LargeWidgetAlbumButtons">
                    <param name="Control">8015</param>
                </include>
            </control>
            <!-- Random Albums -->
            <control type="group">
                <left>360</left>
                <top>90</top>
                <visible>Library.HasContent(Music)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RandomAlbums)</visible>
                <include>VisibleFadeEffect</include>
                <include content="MusicSmallWidgetLayout">
                    <param name="Control">8016</param>
                    <param name="Content">RandomAlbumContent</param>
                </include>
                <include content="SmallWidgetAlbumButtons">
                    <param name="Control">8016</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Library.HasContent(Music)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RandomAlbums)</visible>
                <include>VisibleFadeEffect</include>
                <include content="MusicLargeWidgetLayout">
                    <param name="Control">8017</param>
                    <param name="Content">RandomAlbumContent</param>
                </include>
                <include content="LargeWidgetAlbumButtons">
                    <param name="Control">8017</param>
                </include>
            </control>
            <!-- Suggested Albums -->
            <control type="group">
                <left>360</left>
                <top>90</top>
                <visible>Library.HasContent(Music)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),SuggestedAlbums)</visible>
                <include>VisibleFadeEffect</include>
                <include content="MusicSmallWidgetLayout">
                    <param name="Control">8018</param>
                    <param name="Content">SuggestedAlbumContent</param>
                </include>
                <include content="SmallWidgetAlbumButtons">
                    <param name="Control">8018</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Library.HasContent(Music)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),SuggestedAlbums)</visible>
                <include>VisibleFadeEffect</include>
                <include content="MusicLargeWidgetLayout">
                    <param name="Control">8019</param>
                    <param name="Content">SuggestedAlbumContent</param>
                </include>
                <include content="LargeWidgetAlbumButtons">
                    <param name="Control">8019</param>
                </include>
            </control>
            <!-- Recent Music Videos -->
            <control type="group">
                <!-- Concerts -->
                <left>240</left>
                <top>90</top>
                <visible>Library.HasContent(MusicVideos)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentConcerts)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8020</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">RecentConcertContent</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8020</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Library.HasContent(MusicVideos)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentConcerts)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8021</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">RecentConcertContent</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8021</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <!-- Recent Music Videos (including watched) -->
            <control type="group">
                <!-- Concerts -->
                <left>240</left>
                <top>90</top>
                <visible>Library.HasContent(MusicVideos)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentConcertsWatched)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8045</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">RecentWithWatchedConcertContent</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8045</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Library.HasContent(MusicVideos)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentConcertsWatched)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8046</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">RecentWithWatchedConcertContent</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8046</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <!-- Random Music Videos -->
            <control type="group">
                <left>240</left>
                <top>90</top>
                <visible>Library.HasContent(MusicVideos)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RandomConcerts)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8022</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">RandomConcertContent</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8022</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Library.HasContent(MusicVideos)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RandomConcerts)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8023</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">RandomConcertContent</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8023</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <!-- Suggested Music Videos -->
            <control type="group">
                <left>240</left>
                <top>90</top>
                <visible>Library.HasContent(MusicVideos)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),SuggestedConcerts)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8024</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">SuggestedConcertContent</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8024</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Library.HasContent(MusicVideos)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),SuggestedConcerts)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8025</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">SuggestedConcertContent</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8025</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <!-- Movies Playlist -->
                <left>285</left>
                <top>90</top>
                <!-- Movies Playlist-->
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),VideoPlayList)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>$EXP[IsMoviePlaylist]</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8026</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListOneContent</param>
                    <param name="Visible">Container(9000).HasFocus(1)</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8026</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListTwoContent</param>
                    <param name="Visible">Container(9000).HasFocus(2)</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8026</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListThreeContent</param>
                    <param name="Visible">Container(9000).HasFocus(3)</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8026</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListFourContent</param>
                    <param name="Visible">Container(9000).HasFocus(4)</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8026</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListFiveContent</param>
                    <param name="Visible">Container(9000).HasFocus(5)</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8026</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListSixContent</param>
                    <param name="Visible">Container(9000).HasFocus(6)</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8026</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListSevenContent</param>
                    <param name="Visible">Container(9000).HasFocus(7)</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8026</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListEightContent</param>
                    <param name="Visible">Container(9000).HasFocus(8)</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8026</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListNineContent</param>
                    <param name="Visible">Container(9000).HasFocus(9)</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8026</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListTenContent</param>
                    <param name="Visible">Container(9000).HasFocus(10)</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8026</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListElevenContent</param>
                    <param name="Visible">Container(9000).HasFocus(11)</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8026</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListTwelveContent</param>
                    <param name="Visible">Container(9000).HasFocus(12)</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8026</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListThirteenContent</param>
                    <param name="Visible">Container(9000).HasFocus(13)</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8026</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListFourteenContent</param>
                    <param name="Visible">Container(9000).HasFocus(14)</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8026</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListFifteenContent</param>
                    <param name="Visible">Container(9000).HasFocus(15)</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8026</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <!-- Movies Playlist-->
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),VideoPlayList)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>$EXP[IsMoviePlaylist]</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8027</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListOneContent</param>
                    <param name="Visible">Container(9000).HasFocus(1)</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8027</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListTwoContent</param>
                    <param name="Visible">Container(9000).HasFocus(2)</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8027</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListThreeContent</param>
                    <param name="Visible">Container(9000).HasFocus(3)</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8027</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListFourContent</param>
                    <param name="Visible">Container(9000).HasFocus(4)</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8027</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListFiveContent</param>
                    <param name="Visible">Container(9000).HasFocus(5)</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8027</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListSixContent</param>
                    <param name="Visible">Container(9000).HasFocus(6)</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8027</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListSevenContent</param>
                    <param name="Visible">Container(9000).HasFocus(7)</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8027</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListEightContent</param>
                    <param name="Visible">Container(9000).HasFocus(8)</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8027</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListNineContent</param>
                    <param name="Visible">Container(9000).HasFocus(9)</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8027</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListTenContent</param>
                    <param name="Visible">Container(9000).HasFocus(10)</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8027</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListElevenContent</param>
                    <param name="Visible">Container(9000).HasFocus(11)</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8027</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListTwelveContent</param>
                    <param name="Visible">Container(9000).HasFocus(12)</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8027</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListThirteenContent</param>
                    <param name="Visible">Container(9000).HasFocus(13)</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8027</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListFourteenContent</param>
                    <param name="Visible">Container(9000).HasFocus(14)</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8027</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListFifteenContent</param>
                    <param name="Visible">Container(9000).HasFocus(15)</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8027</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <!-- Episodes Playlist -->
                <left>285</left>
                <top>90</top>
                <!-- Episodes Playlist-->
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),VideoPlayList)</visible>
                <visible>$EXP[IsEpisodePlaylist]</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8028</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListOneContent</param>
                    <param name="Visible">Container(9000).HasFocus(1)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8028</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListTwoContent</param>
                    <param name="Visible">Container(9000).HasFocus(2)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8028</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListThreeContent</param>
                    <param name="Visible">Container(9000).HasFocus(3)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8028</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListFourContent</param>
                    <param name="Visible">Container(9000).HasFocus(4)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8028</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListFiveContent</param>
                    <param name="Visible">Container(9000).HasFocus(5)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8028</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListSixContent</param>
                    <param name="Visible">Container(9000).HasFocus(6)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8028</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListSevenContent</param>
                    <param name="Visible">Container(9000).HasFocus(7)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8028</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListEightContent</param>
                    <param name="Visible">Container(9000).HasFocus(8)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8028</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListNineContent</param>
                    <param name="Visible">Container(9000).HasFocus(9)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8028</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListTenContent</param>
                    <param name="Visible">Container(9000).HasFocus(10)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8028</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListElevenContent</param>
                    <param name="Visible">Container(9000).HasFocus(11)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8028</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListTwelveContent</param>
                    <param name="Visible">Container(9000).HasFocus(12)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8028</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListThirteenContent</param>
                    <param name="Visible">Container(9000).HasFocus(13)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8028</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListFourteenContent</param>
                    <param name="Visible">Container(9000).HasFocus(14)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8028</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListFifteenContent</param>
                    <param name="Visible">Container(9000).HasFocus(15)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8028</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <!-- Episodes Playlist-->
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),VideoPlayList)</visible>
                <visible>$EXP[IsEpisodePlaylist]</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8029</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListOneContent</param>
                    <param name="Visible">Container(9000).HasFocus(1)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8029</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListTwoContent</param>
                    <param name="Visible">Container(9000).HasFocus(2)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8029</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListThreeContent</param>
                    <param name="Visible">Container(9000).HasFocus(3)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8029</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListFourContent</param>
                    <param name="Visible">Container(9000).HasFocus(4)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8029</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListFiveContent</param>
                    <param name="Visible">Container(9000).HasFocus(5)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8029</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListSixContent</param>
                    <param name="Visible">Container(9000).HasFocus(6)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8029</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListSevenContent</param>
                    <param name="Visible">Container(9000).HasFocus(7)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8029</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListEightContent</param>
                    <param name="Visible">Container(9000).HasFocus(8)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8029</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListNineContent</param>
                    <param name="Visible">Container(9000).HasFocus(9)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8029</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListTenContent</param>
                    <param name="Visible">Container(9000).HasFocus(10)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8029</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListElevenContent</param>
                    <param name="Visible">Container(9000).HasFocus(11)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8029</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListTwelveContent</param>
                    <param name="Visible">Container(9000).HasFocus(12)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8029</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListThirteenContent</param>
                    <param name="Visible">Container(9000).HasFocus(13)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8029</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListFourteenContent</param>
                    <param name="Visible">Container(9000).HasFocus(14)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8029</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">PlayListFifteenContent</param>
                    <param name="Visible">Container(9000).HasFocus(15)</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$INFO[ListItem.Title]</param>
                    <param name="label2">$INFO[ListItem.TVShowTitle] - s$INFO[ListItem.Season]e$INFO[ListItem.Episode]</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8029</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <!-- Weather -->
                <left>240</left>
                <top>90</top>
                <visible>!String.IsEmpty(Weather.Plugin) + Weather.IsFetched</visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),Weather)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]</visible>
                <include>VisibleFadeEffect</include>
                <include content="WeatherSmallWidgetLayout">
                    <param name="Control">8030</param>
                    <param name="Content">WeatherForecastContent</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>!String.IsEmpty(Weather.Plugin) + Weather.IsFetched</visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),Weather)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <include>VisibleFadeEffect</include>
                <include content="WeatherLargeWidgetLayout">
                    <param name="Control">8031</param>
                    <param name="Content">WeatherForecastContent</param>
                </include>
            </control>
            <control type="group">
                <!-- NextAired-->
                <left>240</left>
                <top>90</top>
                <visible>!Skin.HasSetting(DisableTVNextAired)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),NextAired)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout" condition="!String.IsEmpty(Window(home).Property(NextAired.1.NextDay))">
                    <param name="Control">8032</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">NextAiredContent</param>
                </include>
                <include content="VideoSmallWidgetLayout" condition="String.IsEmpty(Window(home).Property(NextAired.1.NextDay)) + System.HasAddon(script.embuary.info)">
                    <param name="Control">8032</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$VAR[SeasonEpisodeLabel]</param>
                    <param name="label2">$VAR[SeasonEpisodeLabel2]</param>
                    <param name="Content">EmbuaryInfoNextAiredContent</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8032</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>!Skin.HasSetting(DisableTVNextAired)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),NextAired)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout" condition="!String.IsEmpty(Window(home).Property(NextAired.1.NextDay))">
                    <param name="Control">8033</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">NextAiredContent</param>
                </include>
                <include content="VideoLargeWidgetLayout" condition="String.IsEmpty(Window(home).Property(NextAired.1.NextDay)) + System.HasAddon(script.embuary.info)">
                    <param name="Control">8033</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="episodeswidget">true</param>
                    <param name="label">$VAR[SeasonEpisodeLabel]</param>
                    <param name="label2">$VAR[SeasonEpisodeLabel2]</param>
                    <param name="Content">EmbuaryInfoNextAiredContent</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8033</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <!--UPnP-->
                <left>285</left>
                <top>90</top>
                <visible>Skin.HasSetting(UPnP_Mode) + Skin.String(UPnPServer,Kodi)</visible>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),UPnPMovies)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8035</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">UPnP_RecentMovies</param>
                    <param name="Visible">Skin.HasSetting(UPnP_Mode) + Skin.String(UPnPServer,Kodi)</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8035</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>Skin.HasSetting(UPnP_Mode) + Skin.String(UPnPServer,Kodi)</visible>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),UPnPMovies)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8036</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">UPnP_RecentMovies</param>
                    <param name="Visible">Skin.HasSetting(UPnP_Mode) + Skin.String(UPnPServer,Kodi)</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8036</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <!-- VideoNode-->
                <left>285</left>
                <top>90</top>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),VideoNode)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8037</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">VideoNodeContent</param>
                    <param name="Visible">String.IsEqual(Container(9000).ListItem.Property(WidgetSet),VideoNode)</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8037</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <visible>String.IsEqual(Container(9000).ListItem.Property(WidgetSet),VideoNode)</visible>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8038</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">False</param>
                    <param name="Content">VideoNodeContent</param>
                    <param name="Visible">String.IsEqual(Container(9000).ListItem.Property(WidgetSet),VideoNode)</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8038</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <!-- CustomWidgets-->
                <left>285</left>
                <top>90</top>
                <visible>
                    !Skin.HasSetting(EnableLargeWidgets) | 
                    [Skin.HasSetting(EnableLargeWidgets) + Player.HasMedia + !Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(HideNowPlayingInfo)]
                </visible>
                <include>CustomWidgetVisibility</include>
                <include>VisibleFadeEffect</include>
                <include content="VideoSmallWidgetLayout">
                    <param name="Control">8039</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">True</param>
                    <param name="Content">CustomWidgetContent</param>
                </include>
                <include content="VideoSmallWidgetButtons">
                    <param name="Control">8039</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
            <control type="group">
                <left>0</left>
                <top>81</top>
                <visible>
                [Skin.HasSetting(EnableLargeWidgets) + !Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(LowerMainMenuBar) + Player.HasMedia] | 
                [Skin.HasSetting(EnableLargeWidgets) + Skin.HasSetting(HideNowPlayingInfo)+ Player.HasMedia]
                </visible>
                <include>CustomWidgetVisibility</include>
                <include>VisibleFadeEffect</include>
                <include content="VideoLargeWidgetLayout">
                    <param name="Control">8040</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                    <param name="Custom">True</param>
                    <param name="Content">CustomWidgetContent</param>
                </include>
                <include content="VideoLargeWidgetButtons">
                    <param name="Control">8040</param>
                    <param name="Format">Container(9000).ListItem.Property(WidgetFormat)</param>
                </include>
            </control>
        </control>
    </include>
    <include name="WeatherSmallWidgetLayout">
        <param name="Control" default="8000" />
        <param name="Content" default="" />
        <definition>
            <control type="list" id="$PARAM[Control]">
                <animation effect="slide" start="0,0" end="180,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,3)">onditional</animation>
                <animation effect="slide" start="0,0" end="360,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,2)">onditional</animation>
                <animation effect="slide" start="0,0" end="540,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,1)">onditional</animation>
                <left>0</left>
                <top>0</top>
                <width>1440</width>
                <height>360</height>
                <onleft>$PARAM[Control]</onleft>
                <onright>$PARAM[Control]</onright>
                <onup>21</onup>
                <ondown condition="Skin.HasSetting(LowerMainMenuBar)">9002</ondown>
                <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(DisableGlobalSearch) + !Skin.HasSetting(loorGlobalSearch)">610</ondown>
                <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + [Skin.HasSetting(DisableGlobalSearch) | Skin.HasSetting(loorGlobalSearch)]">603</ondown>
                <viewtype label="535">list</viewtype>
                <scrolltime>200</scrolltime>
                <orientation>Horizontal</orientation>
                <itemlayout height="330" width="360">
                    <control type="image">
                        <description>background</description>
                        <left>0</left>
                        <top>0</top>
                        <width>360</width>
                        <height>330</height>
                        <texture border="15">RecentAddedBack.png</texture>
                        <include condition="!String.IsEmpty(Skin.String(HomeTrans))">HomeTransparentEffect</include>
                    </control>
                    <control type="multiimage">
                        <left>15</left>
                        <top>15</top>
                        <width>330</width>
                        <height>232</height>
                        <timeperimage>70</timeperimage>
                        <fadetime>1</fadetime>
                        <randomize>false</randomize>
                        <aspectratio>keep</aspectratio>
                        <imagepath>$INFO[ListItem.ActualIcon]</imagepath>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                    </control>
                    <control type="label">
                        <left>75</left>
                        <top>22</top>
                        <width>210</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>$VAR[MainColorOne]</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>[B]$INFO[ListItem.Label][/B]</label>
                    </control>
                    <control type="label">
                        <left>30</left>
                        <top>252</top>
                        <width>300</width>
                        <height>30</height>
                        <font>font10</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>top</aligny>
                        <label>$INFO[ListItem.Property(Temperatures)]</label>
                    </control>
                    <control type="label">
                        <left>30</left>
                        <top>278</top>
                        <width>300</width>
                        <height>30</height>
                        <font>font10</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label2]</label>
                    </control>
                </itemlayout>
                <focusedlayout height="330" width="360">
                    <control type="image">
                        <description>background</description>
                        <left>0</left>
                        <top>0</top>
                        <width>360</width>
                        <height>330</height>
                        <texture border="15">RecentAddedBack.png</texture>
                        <include condition="!String.IsEmpty(Skin.String(HomeTrans))">HomeTransparentEffect</include>
                    </control>
                    <control type="multiimage">
                        <left>15</left>
                        <top>15</top>
                        <width>330</width>
                        <height>232</height>
                        <timeperimage>70</timeperimage>
                        <fadetime>1</fadetime>
                        <randomize>false</randomize>
                        <aspectratio>keep</aspectratio>
                        <imagepath>$INFO[ListItem.ActualIcon]</imagepath>
                        <bordertexture border="5" colordiffuse="$VAR[MainColorOne]">folder-focus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="multiimage">
                        <left>15</left>
                        <top>15</top>
                        <width>330</width>
                        <height>232</height>
                        <timeperimage>70</timeperimage>
                        <fadetime>1</fadetime>
                        <randomize>false</randomize>
                        <aspectratio>keep</aspectratio>
                        <imagepath>$INFO[ListItem.ActualIcon]</imagepath>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="label">
                        <left>75</left>
                        <top>22</top>
                        <width>210</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>$VAR[MainColorOne]</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>[B]$INFO[ListItem.Label][/B]</label>
                    </control>
                    <control type="label">
                        <left>30</left>
                        <top>252</top>
                        <width>300</width>
                        <height>30</height>
                        <font>font10</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>top</aligny>
                        <label>$INFO[ListItem.Property(Temperatures)]</label>
                    </control>
                    <control type="label">
                        <left>30</left>
                        <top>278</top>
                        <width>300</width>
                        <height>30</height>
                        <font>font10</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label2]</label>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="label">
                        <left>30</left>
                        <top>278</top>
                        <width>300</width>
                        <height>30</height>
                        <font>font10</font>
                        <textcolor>$VAR[MainColorOne]</textcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label2]</label>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                    </control>
                </focusedlayout>
                <include>$PARAM[Content]</include>
            </control>
        </definition>
    </include>
    <include name="WeatherLargeWidgetLayout">
        <param name="Control" default="8000" />
        <param name="Content" default="" />
        <definition>
            <control type="image">
                <left>-30</left>
                <top>-8</top>
                <width>1980</width>
                <height>442</height>
                <texture border="5">$VAR[DialogPath]ContentPanel.png</texture>
                <include condition="!String.IsEmpty(Skin.String(HomeTrans))">HomeTransparentEffect</include>
                <visible>Integer.IsGreater(Container($PARAM[Control]).NumItems,0)</visible>
            </control>
            <control type="list" id="$PARAM[Control]">
                <animation effect="slide" start="0,0" end="732,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,1)">onditional</animation>
                <animation effect="slide" start="0,0" end="549,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,2)">onditional</animation>
                <animation effect="slide" start="0,0" end="366,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,3)">onditional</animation>
                <animation effect="slide" start="0,0" end="183,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,4)">onditional</animation>
                <left>42</left>
                <top>0</top>
                <width>1830</width>
                <height>428</height>
                <onleft>$PARAM[Control]</onleft>
                <onright>$PARAM[Control]</onright>
                <onup>21</onup>
                <ondown condition="Skin.HasSetting(LowerMainMenuBar)">9002</ondown>
                <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(DisableGlobalSearch) + !Skin.HasSetting(loorGlobalSearch)">610</ondown>
                <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + [Skin.HasSetting(DisableGlobalSearch) | Skin.HasSetting(loorGlobalSearch)]">603</ondown>
                <viewtype label="535">list</viewtype>
                <scrolltime tween="cubic" easing="out">500</scrolltime>
                <orientation>Horizontal</orientation>
                <itemlayout height="428" width="368">
                    <control type="multiimage">
                        <left>15</left>
                        <top>15</top>
                        <width>338</width>
                        <height>338</height>
                        <timeperimage>70</timeperimage>
                        <fadetime>1</fadetime>
                        <randomize>false</randomize>
                        <aspectratio>scale</aspectratio>
                        <imagepath background="true">$INFO[ListItem.ActualIcon]</imagepath>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                    </control>
                    <control type="label">
                        <left>75</left>
                        <top>22</top>
                        <width>218</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>$VAR[MainColorOne]</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>[B]$INFO[ListItem.Label][/B]</label>
                    </control>
                    <control type="label">
                        <left>15</left>
                        <top>352</top>
                        <width>338</width>
                        <height>30</height>
                        <font>font10</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>top</aligny>
                        <label>$INFO[ListItem.Property(Temperatures)]</label>
                    </control>
                    <control type="label">
                        <left>15</left>
                        <top>380</top>
                        <width>338</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label2]</label>
                    </control>
                </itemlayout>
                <focusedlayout height="428" width="368">
                    <control type="multiimage">
                        <left>15</left>
                        <top>15</top>
                        <width>338</width>
                        <height>338</height>
                        <timeperimage>70</timeperimage>
                        <fadetime>1</fadetime>
                        <randomize>false</randomize>
                        <aspectratio>scale</aspectratio>
                        <imagepath background="true">$INFO[ListItem.ActualIcon]</imagepath>
                        <bordertexture border="5" colordiffuse="$VAR[MainColorOne]">folder-focus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="multiimage">
                        <left>15</left>
                        <top>15</top>
                        <width>338</width>
                        <height>338</height>
                        <timeperimage>70</timeperimage>
                        <fadetime>1</fadetime>
                        <randomize>false</randomize>
                        <aspectratio>scale</aspectratio>
                        <imagepath background="true">$INFO[ListItem.ActualIcon]</imagepath>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="label">
                        <left>75</left>
                        <top>22</top>
                        <width>218</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>$VAR[MainColorOne]</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>[B]$INFO[ListItem.Label][/B]</label>
                    </control>
                    <control type="label">
                        <left>15</left>
                        <top>352</top>
                        <width>338</width>
                        <height>30</height>
                        <font>font10</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Property(Temperatures)]</label>
                    </control>
                    <control type="label">
                        <left>15</left>
                        <top>380</top>
                        <width>338</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label2]</label>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="label">
                        <left>15</left>
                        <top>380</top>
                        <width>338</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>$VAR[MainColorOne]</textcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label2]</label>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                    </control>
                </focusedlayout>
                <include>$PARAM[Content]</include>
            </control>
        </definition>
    </include>
    <include name="MusicSmallWidgetLayout">
        <param name="Control" default="8000" />
        <param name="Content" default="" />
        <definition>
            <control type="list" id="$PARAM[Control]">
                <animation effect="slide" start="0,0" end="150,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,3)">onditional</animation>
                <animation effect="slide" start="0,0" end="300,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,2)">onditional</animation>
                <animation effect="slide" start="0,0" end="450,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,1)">onditional</animation>
                <left>0</left>
                <top>0</top>
                <width>1200</width>
                <height>360</height>
                <onleft>$PARAM[Control]</onleft>
                <onright>$PARAM[Control]</onright>
                <onup>21</onup>
                <ondown condition="Skin.HasSetting(LowerMainMenuBar)">9002</ondown>
                <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(DisableGlobalSearch) + !Skin.HasSetting(loorGlobalSearch)">610</ondown>
                <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + [Skin.HasSetting(DisableGlobalSearch) | Skin.HasSetting(loorGlobalSearch)]">603</ondown>
                <viewtype label="535">list</viewtype>
                <scrolltime>200</scrolltime>
                <orientation>Horizontal</orientation>
                <itemlayout height="330" width="300">
                    <control type="image">
                        <left>0</left>
                        <top>0</top>
                        <width>300</width>
                        <height>330</height>
                        <texture border="15">RecentAddedBack.png</texture>
                        <include condition="!String.IsEmpty(Skin.String(HomeTrans))">HomeTransparentEffect</include>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>270</width>
                        <height>232</height>
                        <aspectratio>keep</aspectratio>
                        <texture background="true">$INFO[ListItem.Art(thumb)]</texture>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                    </control>
                    <control type="label">
                        <left>15</left>
                        <top>255</top>
                        <width>270</width>
                        <height>30</height>
                        <font>font10</font>
                        <textcolor>grey2</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Artist]</label>
                    </control>
                    <control type="label">
                        <left>15</left>
                        <top>285</top>
                        <width>270</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                    </control>
                </itemlayout>
                <focusedlayout height="330" width="300">
                    <control type="image">
                        <left>0</left>
                        <top>0</top>
                        <width>300</width>
                        <height>330</height>
                        <texture border="15">RecentAddedBack.png</texture>
                        <include condition="!String.IsEmpty(Skin.String(HomeTrans))">HomeTransparentEffect</include>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>270</width>
                        <height>232</height>
                        <aspectratio>keep</aspectratio>
                        <texture background="true">$INFO[ListItem.Art(thumb)]</texture>
                        <bordertexture border="5" colordiffuse="$VAR[MainColorOne]">folder-focus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>270</width>
                        <height>232</height>
                        <aspectratio>keep</aspectratio>
                        <texture background="true">$INFO[ListItem.Art(thumb)]</texture>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <bordersize>5</bordersize>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="label">
                        <left>15</left>
                        <top>255</top>
                        <width>270</width>
                        <height>30</height>
                        <font>font10</font>
                        <textcolor>grey2</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Artist]</label>
                    </control>
                    <control type="label">
                        <left>15</left>
                        <top>285</top>
                        <width>270</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="label">
                        <left>15</left>
                        <top>285</top>
                        <width>270</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>$VAR[MainColorOne]</textcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                    </control>
                </focusedlayout>
                <include>$PARAM[Content]</include>
            </control>
        </definition>
    </include>
    <include name="MusicLargeWidgetLayout">
        <param name="Control" default="8000" />
        <param name="Content" default="" />
        <definition>
            <control type="image">
                <left>-30</left>
                <top>-8</top>
                <width>1980</width>
                <height>442</height>
                <texture border="5">$VAR[DialogPath]ContentPanel.png</texture>
                <include condition="!String.IsEmpty(Skin.String(HomeTrans))">HomeTransparentEffect</include>
                <visible>Integer.IsGreater(Container($PARAM[Control]).NumItems,0)</visible>
            </control>
            <control type="list" id="$PARAM[Control]">
                <animation effect="slide" start="0,0" end="732,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,1)">conditional</animation>
                <animation effect="slide" start="0,0" end="549,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="366,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,3)">conditional</animation>
                <animation effect="slide" start="0,0" end="183,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,4)">conditional</animation>
                <left>60</left>
                <top>0</top>
                <width>1800</width>
                <height>428</height>
                <onleft>$PARAM[Control]</onleft>
                <onright>$PARAM[Control]</onright>
                <onup>21</onup>
                <ondown condition="Skin.HasSetting(LowerMainMenuBar)">9002</ondown>
                <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(DisableGlobalSearch) + !Skin.HasSettingFloorGlobalSearch)">610</ondown>
                <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + [Skin.HasSetting(DisableGlobalSearch) | Skin.HasSettingFloorGlobalSearch)]">603</ondown>
                <viewtype label="535">list</viewtype>
                <scrolltime tween="cubic" easing="out">500</scrolltime>
                <orientation>Horizontal</orientation>
                <itemlayout height="428" width="360">
                    <control type="image">
                        <left>11</left>
                        <top>15</top>
                        <width>338</width>
                        <height>338</height>
                        <aspectratio>scale</aspectratio>
                        <texture background="true">$INFO[ListItem.Art(thumb)]</texture>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <bordersize>5</bordersize>
                    </control>
                    <control type="label">
                        <left>11</left>
                        <top>352</top>
                        <width>338</width>
                        <height>30</height>
                        <font>font10</font>
                        <textcolor>grey2</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Artist]</label>
                    </control>
                    <control type="label">
                        <left>11</left>
                        <top>380</top>
                        <width>338</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                    </control>
                </itemlayout>
                <focusedlayout height="428" width="360">
                    <control type="image">
                        <left>11</left>
                        <top>15</top>
                        <width>338</width>
                        <height>338</height>
                        <aspectratio>scale</aspectratio>
                        <texture background="true">$INFO[ListItem.Art(thumb)]</texture>
                        <bordertexture border="5" colordiffuse="$VAR[MainColorOne]">folder-focus.png</bordertexture>
                        <bordersize>5</bordersize>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="image">
                        <left>11</left>
                        <top>15</top>
                        <width>338</width>
                        <height>338</height>
                        <aspectratio>scale</aspectratio>
                        <texture background="true">$INFO[ListItem.Art(thumb)]</texture>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <bordersize>5</bordersize>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="label">
                        <left>11</left>
                        <top>352</top>
                        <width>338</width>
                        <height>30</height>
                        <font>font10</font>
                        <textcolor>grey2</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Artist]</label>
                    </control>
                    <control type="label">
                        <left>11</left>
                        <top>380</top>
                        <width>338</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="label">
                        <left>11</left>
                        <top>380</top>
                        <width>338</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>$VAR[MainColorOne]</textcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                    </control>
                </focusedlayout>
                <include>$PARAM[Content]</include>
            </control>
        </definition>
    </include>
    <include name="VideoSmallWidgetLayout">
        <param name="Control" default="8000" />
        <param name="Format" default="Poster" />
        <param name="Custom" default="False" />
        <param name="Content" default="" />
        <param name="episodeswidget">false</param>
        <param name="Visible" default="True" />
        <param name="label">$INFO[ListItem.Label]</param>
        <param name="label2">$INFO[ListItem.Label2]</param>
        <definition>
            <control type="group">
                <visible>String.IsEqual($PARAM[Format],Poster) + $PARAM[Visible]</visible>
                <include content="MovieSmallWidgetLayout">
                    <param name="Control">$PARAM[Control]</param>
                    <param name="Content">$PARAM[Content]</param>
                    <param name="Custom">$PARAM[Custom]</param>
                </include>
            </control>
            <control type="group">
                <visible>String.IsEqual($PARAM[Format],Thumb) + $PARAM[Visible] + $PARAM[episodeswidget]</visible>
                <include content="EpisodeSmallWidgetLayout">
                    <param name="Control">$PARAM[Control]1</param>
                    <param name="Content">$PARAM[Content]</param>
                    <param name="Custom">$PARAM[Custom]</param>
                    <param name="label">$PARAM[label]</param>
                    <param name="label2">$PARAM[label2]</param>
                </include>
            </control>
            <control type="group">
                <visible>String.IsEqual($PARAM[Format],Thumb) + $PARAM[Visible] + !$PARAM[episodeswidget]</visible>
                <include content="EpisodeSmallWidgetLayout">
                    <param name="Control">$PARAM[Control]1</param>
                    <param name="Content">$PARAM[Content]</param>
                    <param name="Custom">$PARAM[Custom]</param>
                    <param name="label">$PARAM[label]</param>
                    <param name="label2">$PARAM[label2]</param>
                </include>
            </control>
        </definition>
    </include>
    <include name="VideoLargeWidgetLayout">
        <param name="Control" default="8000" />
        <param name="Format" default="Poster" />
        <param name="Custom" default="False" />
        <param name="Content" default="" />
        <param name="Visible" default="True" />
        <param name="episodeswidget">false</param>
        <param name="label">$INFO[ListItem.Label]</param>
        <param name="label2">$INFO[ListItem.Label2]</param>
        <definition>
            <control type="group">
                <visible>String.IsEqual($PARAM[Format],Poster) + $PARAM[Visible]</visible>
                <include content="MovieLargeWidgetLayout">
                    <param name="Control">$PARAM[Control]</param>
                    <param name="Content">$PARAM[Content]</param>
                    <param name="Custom">$PARAM[Custom]</param>
                </include>
            </control>
            <control type="group">
                <visible>String.IsEqual($PARAM[Format],Thumb) + $PARAM[Visible] + $PARAM[episodeswidget]</visible>
                <include content="EpisodeLargeWidgetLayout">
                    <param name="Control">$PARAM[Control]1</param>
                    <param name="Content">$PARAM[Content]</param>
                    <param name="Custom">$PARAM[Custom]</param>
                    <param name="label">$PARAM[label]</param>
                    <param name="label2">$PARAM[label2]</param>
                </include>
            </control>
            <control type="group">
                <visible>String.IsEqual($PARAM[Format],Thumb) + $PARAM[Visible] + !$PARAM[episodeswidget]</visible>
                <include content="EpisodeLargeWidgetLayout">
                    <param name="Control">$PARAM[Control]1</param>
                    <param name="Content">$PARAM[Content]</param>
                    <param name="Custom">$PARAM[Custom]</param>
                    <param name="label">$PARAM[label]</param>
                    <param name="label2">$PARAM[label2]</param>
                </include>
            </control>
        </definition>
    </include>
    <include name="MovieSmallWidgetLayout">
        <param name="Control" default="8000" />
        <param name="Content" default="" />
        <param name="Custom" default="False" />
        <definition>
            <control type="list" id="$PARAM[Control]">
                <animation effect="slide" start="0,0" end="135,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,4)">conditional</animation>
                <animation effect="slide" start="0,0" end="270,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,3)">conditional</animation>
                <animation effect="slide" start="0,0" end="405,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="540,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,1)">conditional</animation>
                <left>0</left>
                <top>0</top>
                <width>1350</width>
                <height>330</height>
                <onleft>$PARAM[Control]</onleft>
                <onright>$PARAM[Control]</onright>
                <onup>21</onup>
                <ondown condition="Skin.HasSetting(LowerMainMenuBar)">9002</ondown>
                <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(DisableGlobalSearch) + !Skin.HasSetting(FloorGlobalSearch)">610</ondown>
                <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + [Skin.HasSetting(DisableGlobalSearch) | Skin.HasSetting(FloorGlobalSearch)]">603</ondown>
                <viewtype label="535">list</viewtype>
                <scrolltime>200</scrolltime>
                <orientation>Horizontal</orientation>
                <itemlayout height="330" width="270">
                    <control type="image">
                        <left>0</left>
                        <top>0</top>
                        <width>270</width>
                        <height>330</height>
                        <texture border="15">RecentAddedBack.png</texture>
                        <include condition="!String.IsEmpty(Skin.String(HomeTrans))">HomeTransparentEffect</include>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>240</width>
                        <height>255</height>
                        <texture background="true">$VAR[VideoThumbImage]</texture>
                        <aspectratio>keep</aspectratio>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>!$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>240</width>
                        <height>255</height>
                        <texture background="true">$VAR[VideoCustomThumbImage]</texture>
                        <aspectratio>keep</aspectratio>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>$PARAM[Custom]</visible>
                    </control>
                    <control type="label">
                        <left>22</left>
                        <top>278</top>
                        <width>225</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                    </control>
                    <control type="image">
                        <left>208</left>
                        <top>238</top>
                        <width>35</width>
                        <height>35</height>
                        <texture>OverlayWatching.png</texture>
                        <visible>ListItem.IsResumable</visible>
                    </control>
                    <control type="image">
                        <left>205</left>
                        <top>235</top>
                        <width>35</width>
                        <height>35</height>
                        <aspectratio>keep</aspectratio>
                        <texture>$INFO[ListItem.Overlay]</texture>
                        <visible>!ListItem.IsResumable</visible>
                    </control>
                </itemlayout>
                <focusedlayout height="330" width="270">
                    <control type="image">
                        <left>0</left>
                        <top>0</top>
                        <width>270</width>
                        <height>330</height>
                        <texture border="15">RecentAddedBack.png</texture>
                        <include condition="!String.IsEmpty(Skin.String(HomeTrans))">HomeTransparentEffect</include>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>240</width>
                        <height>255</height>
                        <texture background="true">$VAR[VideoThumbImage]</texture>
                        <aspectratio>keep</aspectratio>
                        <bordertexture border="5" colordiffuse="$VAR[MainColorOne]">folder-focus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                        <visible>!$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>240</width>
                        <height>255</height>
                        <texture>$VAR[VideoThumbImage]</texture>
                        <aspectratio>keep</aspectratio>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                        <visible>!$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>240</width>
                        <height>255</height>
                        <texture background="true">$VAR[VideoCustomThumbImage]</texture>
                        <aspectratio>keep</aspectratio>
                        <bordertexture border="5" colordiffuse="$VAR[MainColorOne]">folder-focus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                        <visible>$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>240</width>
                        <height>255</height>
                        <texture>$VAR[VideoCustomThumbImage]</texture>
                        <aspectratio>keep</aspectratio>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                        <visible>$PARAM[Custom]</visible>
                    </control>
                    <control type="label">
                        <left>22</left>
                        <top>278</top>
                        <width>225</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="label">
                        <left>22</left>
                        <top>278</top>
                        <width>225</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>$VAR[MainColorOne]</textcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="image">
                        <left>208</left>
                        <top>238</top>
                        <width>35</width>
                        <height>35</height>
                        <texture>OverlayWatching.png</texture>
                        <visible>ListItem.IsResumable</visible>
                    </control>
                    <control type="image">
                        <left>205</left>
                        <top>235</top>
                        <width>35</width>
                        <height>35</height>
                        <aspectratio>keep</aspectratio>
                        <texture>$INFO[ListItem.Overlay]</texture>
                        <visible>!ListItem.IsResumable</visible>
                    </control>
                </focusedlayout>
                <include>$PARAM[Content]</include>
            </control>
        </definition>
    </include>
    <include name="MovieLargeWidgetLayout">
        <param name="Control" default="8000" />
        <param name="Content" default="" />
        <param name="Custom" default="False" />
        <definition>
            <control type="image">
                <left>-30</left>
                <top>-8</top>
                <width>1980</width>
                <height>442</height>
                <texture border="5">$VAR[DialogPath]ContentPanel.png</texture>
                <include condition="!String.IsEmpty(Skin.String(HomeTrans))">HomeTransparentEffect</include>
                <visible>Integer.IsGreater(Container($PARAM[Control]).NumItems,0)</visible>
            </control>
            <control type="list" id="$PARAM[Control]">
                <animation effect="slide" start="0,0" end="728,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,1)">conditional</animation>
                <animation effect="slide" start="0,0" end="580,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="435,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,3)">conditional</animation>
                <animation effect="slide" start="0,0" end="288,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,4)">conditional</animation>
                <animation effect="slide" start="0,0" end="144,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,5)">conditional</animation>
                <left>87</left>
                <top>0</top>
                <width>1755</width>
                <height>480</height>
                <onleft>$PARAM[Control]</onleft>
                <onright>$PARAM[Control]</onright>
                <onup>21</onup>
                <ondown condition="Skin.HasSetting(LowerMainMenuBar)">9002</ondown>
                <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(DisableGlobalSearch) + !Skin.HasSetting(FloorGlobalSearch)">610</ondown>
                <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + [Skin.HasSetting(DisableGlobalSearch) | Skin.HasSetting(FloorGlobalSearch)]">603</ondown>
                <viewtype label="535">list</viewtype>
                <scrolltime tween="cubic" easing="out">500</scrolltime>
                <orientation>Horizontal</orientation>
                <itemlayout height="428" width="292">
                    <control type="image">
                        <left>14</left>
                        <top>12</top>
                        <width>264</width>
                        <height>372</height>
                        <aspectratio>keep</aspectratio>
                        <texture background="true">$VAR[VideoThumbImage]</texture>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>!$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>14</left>
                        <top>12</top>
                        <width>264</width>
                        <height>372</height>
                        <aspectratio>keep</aspectratio>
                        <texture background="true">$VAR[VideoCustomThumbImage]</texture>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>$PARAM[Custom]</visible>
                    </control>
                    <control type="label">
                        <left>14</left>
                        <top>384</top>
                        <width>264</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                    </control>
                    <control type="image">
                        <left>257</left>
                        <top>352</top>
                        <width>35</width>
                        <height>35</height>
                        <texture>OverlayWatching.png</texture>
                        <visible>ListItem.IsResumable</visible>
                    </control>
                    <control type="image">
                        <left>250</left>
                        <top>350</top>
                        <width>35</width>
                        <height>35</height>
                        <aspectratio>keep</aspectratio>
                        <texture>$INFO[ListItem.Overlay]</texture>
                        <visible>!ListItem.IsResumable</visible>
                    </control>
                </itemlayout>
                <focusedlayout height="428" width="292">
                    <control type="image">
                        <left>14</left>
                        <top>12</top>
                        <width>264</width>
                        <height>372</height>
                        <aspectratio>keep</aspectratio>
                        <texture background="true">$VAR[VideoThumbImage]</texture>
                        <bordertexture border="5" colordiffuse="$VAR[MainColorOne]">folder-focus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                        <visible>!$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>14</left>
                        <top>12</top>
                        <width>264</width>
                        <height>372</height>
                        <aspectratio>keep</aspectratio>
                        <texture background="true">$VAR[VideoThumbImage]</texture>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                        <visible>!$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>14</left>
                        <top>12</top>
                        <width>264</width>
                        <height>372</height>
                        <aspectratio>keep</aspectratio>
                        <texture background="true">$VAR[VideoCustomThumbImage]</texture>
                        <bordertexture border="5" colordiffuse="$VAR[MainColorOne]">folder-focus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                        <visible>$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>14</left>
                        <top>12</top>
                        <width>264</width>
                        <height>372</height>
                        <aspectratio>keep</aspectratio>
                        <texture background="true">$VAR[VideoCustomThumbImage]</texture>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                        <visible>$PARAM[Custom]</visible>
                    </control>
                    <control type="label">
                        <left>14</left>
                        <top>384</top>
                        <width>264</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="label">
                        <left>14</left>
                        <top>384</top>
                        <width>264</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>$VAR[MainColorOne]</textcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="image">
                        <left>257</left>
                        <top>352</top>
                        <width>35</width>
                        <height>35</height>
                        <texture>OverlayWatching.png</texture>
                        <visible>ListItem.IsResumable</visible>
                    </control>
                    <control type="image">
                        <left>250</left>
                        <top>350</top>
                        <width>35</width>
                        <height>35</height>
                        <aspectratio>keep</aspectratio>
                        <texture>$INFO[ListItem.Overlay]</texture>
                        <visible>!ListItem.IsResumable</visible>
                    </control>
                </focusedlayout>
                <include>$PARAM[Content]</include>
            </control>
        </definition>
    </include>
    <include name="EpisodeSmallWidgetLayout">
        <param name="Control" default="8000" />
        <param name="Content" default="" />
        <param name="Custom" default="False" />
        <param name="label">$INFO[ListItem.Label]</param>
        <param name="label2">$INFO[ListItem.Label2]</param>
        <definition>
            <control type="list" id="$PARAM[Control]">
                <animation effect="slide" start="0,0" end="180,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,3)">conditional</animation>
                <animation effect="slide" start="0,0" end="360,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,2)">conditional</animation>
                <animation effect="slide" start="0,0" end="540,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,1)">conditional</animation>
                <left>0</left>
                <top>0</top>
                <width>1440</width>
                <height>360</height>
                <onleft>PARAM[Control]</onleft>
                <onright>PARAM[Control]</onright>
                <onup>21</onup>
                <ondown condition="Skin.HasSetting(LowerMainMenuBar)">9002</ondown>
                <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(DisableGlobalSearch) + !Skin.HasSetting(FloorGlobalSearch)">610</ondown>
                <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + [Skin.HasSetting(DisableGlobalSearch) | Skin.HasSetting(FloorGlobalSearch)]">603</ondown>
                <viewtype label="535">list</viewtype>
                <scrolltime>200</scrolltime>
                <orientation>Horizontal</orientation>
                <itemlayout height="330" width="360">
                    <control type="image">
                        <left>0</left>
                        <top>0</top>
                        <width>360</width>
                        <height>330</height>
                        <texture border="15">RecentAddedBack.png</texture>
                        <include condition="!String.IsEmpty(Skin.String(HomeTrans))">HomeTransparentEffect</include>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>330</width>
                        <height>232</height>
                        <aspectratio>scale</aspectratio>
                        <texture background="true">$VAR[EpisodeThumbImage]</texture>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>!$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>330</width>
                        <height>232</height>
                        <aspectratio>scale</aspectratio>
                        <texture background="true">$VAR[EpisodeCustomThumbImage]</texture>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>22</left>
                        <top>22</top>
                        <width>315</width>
                        <height>218</height>
                        <aspectratio align="center" aligny="bottom">keep</aspectratio>
                        <texture>$INFO[ListItem.Art(tvshow.clearlogo)]</texture>
                        <visible>!Skin.HasSetting(DisableLogoArt)</visible>
                    </control>
                    <control type="label">
                        <left>30</left>
                        <top>252</top>
                        <width>300</width>
                        <height>30</height>
                        <font>font10</font>
                        <textcolor>grey2</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$PARAM[label2]</label>
                    </control>
                    <control type="label">
                        <left>30</left>
                        <top>278</top>
                        <width>300</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$PARAM[label]</label>
                    </control>
                    <control type="image">
                        <left>318</left>
                        <top>214</top>
                        <width>35</width>
                        <height>35</height>
                        <texture>OverlayWatching.png</texture>
                        <visible>ListItem.IsResumable</visible>
                    </control>
                    <control type="image">
                        <left>315</left>
                        <top>212</top>
                        <width>35</width>
                        <height>35</height>
                        <aspectratio>keep</aspectratio>
                        <texture>$INFO[ListItem.Overlay]</texture>
                        <visible>!ListItem.IsResumable</visible>
                    </control>
                </itemlayout>
                <focusedlayout height="330" width="360">
                    <control type="image">
                        <left>0</left>
                        <top>0</top>
                        <width>360</width>
                        <height>330</height>
                        <texture border="15">RecentAddedBack.png</texture>
                        <include condition="!String.IsEmpty(Skin.String(HomeTrans))">HomeTransparentEffect</include>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>330</width>
                        <height>232</height>
                        <aspectratio>scale</aspectratio>
                        <texture background="true">$VAR[EpisodeThumbImage]</texture>
                        <bordertexture border="5" colordiffuse="$VAR[MainColorOne]">folder-focus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                        <visible>!$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>330</width>
                        <height>232</height>
                        <aspectratio>scale</aspectratio>
                        <texture background="true">$VAR[EpisodeThumbImage]</texture>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                        <visible>!$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>330</width>
                        <height>232</height>
                        <aspectratio>scale</aspectratio>
                        <texture background="true">$VAR[EpisodeCustomThumbImage]</texture>
                        <bordertexture border="5" colordiffuse="$VAR[MainColorOne]">folder-focus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                        <visible>$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>330</width>
                        <height>232</height>
                        <aspectratio>scale</aspectratio>
                        <texture background="true">$VAR[EpisodeCustomThumbImage]</texture>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                        <visible>$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>22</left>
                        <top>22</top>
                        <width>315</width>
                        <height>218</height>
                        <aspectratio align="center" aligny="bottom">keep</aspectratio>
                        <texture>$INFO[ListItem.Art(tvshow.clearlogo)]</texture>
                        <visible>!Skin.HasSetting(DisableLogoArt)</visible>
                    </control>
                    <control type="label">
                        <left>30</left>
                        <top>252</top>
                        <width>300</width>
                        <height>30</height>
                        <font>font10</font>
                        <textcolor>grey2</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$PARAM[label2]</label>
                    </control>
                    <control type="label">
                        <left>30</left>
                        <top>278</top>
                        <width>300</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$PARAM[label]</label>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="label">
                        <left>30</left>
                        <top>278</top>
                        <width>300</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>$VAR[MainColorOne]</textcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$PARAM[label]</label>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="image">
                        <left>318</left>
                        <top>214</top>
                        <width>35</width>
                        <height>35</height>
                        <texture>OverlayWatching.png</texture>
                        <visible>ListItem.IsResumable</visible>
                    </control>
                    <control type="image">
                        <left>315</left>
                        <top>212</top>
                        <width>35</width>
                        <height>35</height>
                        <aspectratio>keep</aspectratio>
                        <texture>$INFO[ListItem.Overlay]</texture>
                        <visible>!ListItem.IsResumable</visible>
                    </control>
                </focusedlayout>
                <include>$PARAM[Content]</include>
            </control>
        </definition>
    </include>
    <include name="EpisodeLargeWidgetLayout">
        <param name="Control" default="8000" />
        <param name="Content" default="" />
        <param name="Custom" default="False" />
        <param name="label">$INFO[ListItem.Label]</param>
        <param name="label2">$INFO[ListItem.Label2]</param>
        <definition>
            <control type="image">
                <left>-30</left>
                <top>-8</top>
                <width>1980</width>
                <height>442</height>
                <texture border="5">$VAR[DialogPath]ContentPanel.png</texture>
                <include condition="!String.IsEmpty(Skin.String(HomeTrans))">HomeTransparentEffect</include>
                <visible>Integer.IsGreater(Container($PARAM[Control]).NumItems,0)</visible>
            </control>
            <control type="list" id="$PARAM[Control]">
                <animation effect="slide" start="0,0" end="675,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,1)">onditional</animation>
                <animation effect="slide" start="0,0" end="450,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,2)">onditional</animation>
                <animation effect="slide" start="0,0" end="225,0" time="0" condition="String.IsEqual(Container($PARAM[Control]).NumItems,3)">onditional</animation>
                <left>60</left>
                <top>0</top>
                <width>1800</width>
                <height>510</height>
                <onleft>$PARAM[Control]</onleft>
                <onright>$PARAM[Control]</onright>
                <onup>21</onup>
                <ondown condition="Skin.HasSetting(LowerMainMenuBar)">9002</ondown>
                <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + !Skin.HasSetting(DisableGlobalSearch) + !Skin.HasSetting(loorGlobalSearch)">610</ondown>
                <ondown condition="!Skin.HasSetting(LowerMainMenuBar) + [Skin.HasSetting(DisableGlobalSearch) | Skin.HasSetting(loorGlobalSearch)]">603</ondown>
                <viewtype label="535">list</viewtype>
                <scrolltime tween="cubic" easing="out">500</scrolltime>
                <orientation>Horizontal</orientation>
                <itemlayout height="428" width="450">
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>420</width>
                        <height>322</height>
                        <aspectratio>scale</aspectratio>
                        <texture background="true">$VAR[EpisodeThumbImage]</texture>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>!$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>420</width>
                        <height>322</height>
                        <aspectratio>scale</aspectratio>
                        <texture background="true">$VAR[EpisodeCustomThumbImage]</texture>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>22</left>
                        <top>22</top>
                        <width>405</width>
                        <height>308</height>
                        <aspectratio align="center" aligny="bottom">keep</aspectratio>
                        <texture>$INFO[ListItem.Property(Logo)]</texture>
                        <visible>!Skin.HasSetting(DisableLogoArt)</visible>
                    </control>
                    <control type="label">
                        <left>15</left>
                        <top>345</top>
                        <width>420</width>
                        <height>30</height>
                        <font>font10</font>
                        <textcolor>grey2</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$PARAM[label2]</label>
                    </control>
                    <control type="label">
                        <left>15</left>
                        <top>375</top>
                        <width>420</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$PARAM[label]</label>
                    </control>
                    <control type="image">
                        <left>424</left>
                        <top>307</top>
                        <width>35</width>
                        <height>35</height>
                        <texture>OverlayWatching.png</texture>
                        <visible>ListItem.IsResumable</visible>
                    </control>
                    <control type="image">
                        <left>420</left>
                        <top>302</top>
                        <width>35</width>
                        <height>35</height>
                        <aspectratio>keep</aspectratio>
                        <texture>$INFO[ListItem.Overlay]</texture>
                        <visible>!ListItem.IsResumable</visible>
                    </control>
                </itemlayout>
                <focusedlayout height="428" width="450">
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>420</width>
                        <height>322</height>
                        <aspectratio>scale</aspectratio>
                        <texture background="true">$VAR[EpisodeThumbImage]</texture>
                        <bordertexture border="5" colordiffuse="$VAR[MainColorOne]">folder-focus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                        <visible>!$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>420</width>
                        <height>322</height>
                        <aspectratio>scale</aspectratio>
                        <texture>$VAR[EpisodeThumbImage]</texture>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                        <visible>!$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>420</width>
                        <height>322</height>
                        <aspectratio>scale</aspectratio>
                        <texture background="true">$VAR[EpisodeCustomThumbImage]</texture>
                        <bordertexture border="5" colordiffuse="$VAR[MainColorOne]">folder-focus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                        <visible>$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>15</left>
                        <top>15</top>
                        <width>420</width>
                        <height>322</height>
                        <aspectratio>scale</aspectratio>
                        <texture>$VAR[EpisodeCustomThumbImage]</texture>
                        <bordertexture border="5">button-nofocus.png</bordertexture>
                        <include>TextureBorderWidgets</include>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                        <visible>$PARAM[Custom]</visible>
                    </control>
                    <control type="image">
                        <left>22</left>
                        <top>22</top>
                        <width>405</width>
                        <height>308</height>
                        <aspectratio align="center" aligny="bottom">keep</aspectratio>
                        <texture>$INFO[ListItem.Property(Logo)]</texture>
                        <visible>!Skin.HasSetting(DisableLogoArt)</visible>
                    </control>
                    <control type="label">
                        <left>15</left>
                        <top>345</top>
                        <width>420</width>
                        <height>30</height>
                        <font>font10</font>
                        <textcolor>grey2</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$PARAM[label2]</label>
                    </control>
                    <control type="label">
                        <left>15</left>
                        <top>375</top>
                        <width>420</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>white</textcolor>
                        <shadowcolor>black</shadowcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$PARAM[label]</label>
                        <visible>!Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="label">
                        <left>15</left>
                        <top>375</top>
                        <width>420</width>
                        <height>30</height>
                        <font>font12</font>
                        <textcolor>$VAR[MainColorOne]</textcolor>
                        <selectedcolor>selected</selectedcolor>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$PARAM[label]</label>
                        <visible>Control.HasFocus($PARAM[Control])</visible>
                    </control>
                    <control type="image">
                        <left>424</left>
                        <top>307</top>
                        <width>35</width>
                        <height>35</height>
                        <texture>OverlayWatching.png</texture>
                        <visible>ListItem.IsResumable</visible>
                    </control>
                    <control type="image">
                        <left>420</left>
                        <top>302</top>
                        <width>35</width>
                        <height>35</height>
                        <aspectratio>keep</aspectratio>
                        <texture>$INFO[ListItem.Overlay]</texture>
                        <visible>!ListItem.IsResumable</visible>
                    </control>
                </focusedlayout>
                <include>$PARAM[Content]</include>
            </control>
        </definition>
    </include>
    
    <include name="VideoSmallWidgetButtons">
        <param name="Control" default="8000" />
        <param name="Format" default="Poster" />
        <definition>
            <control type="group">
                <visible>String.IsEqual($PARAM[Format],Poster)</visible>
                <include content="SmallWidgetMovieButtons">
                    <param name="Control">$PARAM[Control]</param>
                </include>
            </control>
            <control type="group">
                <visible>String.IsEqual($PARAM[Format],Thumb)</visible>
                <include content="SmallWidgetEpisodeButtons">
                    <param name="Control">$PARAM[Control]1</param>
                </include>
            </control>
        </definition>
    </include>
    <include name="VideoLargeWidgetButtons">
        <param name="Control" default="8000" />
        <param name="Format" default="Poster" />
        <definition>
            <control type="group">
                <visible>String.IsEqual($PARAM[Format],Poster)</visible>
                <include content="LargeWidgetMovieButtons">
                    <param name="Control">$PARAM[Control]</param>
                </include>
            </control>
            <control type="group">
                <visible>String.IsEqual($PARAM[Format],Thumb)</visible>
                <include content="LargeWidgetEpisodeButtons">
                    <param name="Control">$PARAM[Control]1</param>
                </include>
            </control>
        </definition>
    </include>
    <include name="SmallWidgetMovieButtons">
        <param name="Control" default="8000" />
        <definition>
            <control type="button">
                <left>-60</left>
                <top>135</top>
                <width>45</width>
                <height>60</height>
                <texturefocus>arrow-big-left.png</texturefocus>
                <texturenofocus>arrow-big-left.png</texturenofocus>
                <include>VisibleFadeEffect</include>
                <onclick>Control.Move($PARAM[Control],-1)</onclick>
                <visible>[system.getbool(input.enablemouse) | Control.HasFocus($PARAM[Control])] + Container($PARAM[Control]).HasPrevious</visible>
                <include>VisibleFadeEffect</include>
            </control>
            <control type="button">
                <left>1365</left>
                <top>135</top>
                <width>45</width>
                <height>60</height>
                <texturefocus>arrow-big-right.png</texturefocus>
                <texturenofocus>arrow-big-right.png</texturenofocus>
                <include>VisibleFadeEffect</include>
                <onclick>Control.Move($PARAM[Control],1)</onclick>
                <visible>[system.getbool(input.enablemouse) | Control.HasFocus($PARAM[Control])] + Container($PARAM[Control]).HasNext</visible>
                <include>VisibleFadeEffect</include>
            </control>
        </definition>
    </include>
    <include name="LargeWidgetMovieButtons">
        <param name="Control" default="8000" />
        <definition>
            <control type="button">
                <left>6</left>
                <top>150</top>
                <width>45</width>
                <height>60</height>
                <texturefocus>arrow-big-left.png</texturefocus>
                <texturenofocus>arrow-big-left.png</texturenofocus>
                <include>VisibleFadeEffect</include>
                <onclick>Control.Move($PARAM[Control],-1)</onclick>
                <visible>[system.getbool(input.enablemouse) | Control.HasFocus($PARAM[Control])] + Container($PARAM[Control]).HasPrevious</visible>
                <include>VisibleFadeEffect</include>
            </control>
            <control type="button">
                <left>1870</left>
                <top>150</top>
                <width>45</width>
                <height>60</height>
                <texturefocus>arrow-big-right.png</texturefocus>
                <texturenofocus>arrow-big-right.png</texturenofocus>
                <include>VisibleFadeEffect</include>
                <onclick>Control.Move($PARAM[Control],1)</onclick>
                <visible>[system.getbool(input.enablemouse) | Control.HasFocus($PARAM[Control])] + Container($PARAM[Control]).HasNext</visible>
                <include>VisibleFadeEffect</include>
            </control>
        </definition>
    </include>
    <include name="SmallWidgetEpisodeButtons">
        <param name="Control" default="8000" />
        <definition>
            <control type="button">
                <left>-60</left>
                <top>135</top>
                <width>45</width>
                <height>60</height>
                <texturefocus>arrow-big-left.png</texturefocus>
                <texturenofocus>arrow-big-left.png</texturenofocus>
                <include>VisibleFadeEffect</include>
                <onclick>Control.Move($PARAM[Control],-1)</onclick>
                <visible>[system.getbool(input.enablemouse) | Control.HasFocus($PARAM[Control])] + Container($PARAM[Control]).HasPrevious</visible>
                <include>VisibleFadeEffect</include>
            </control>
            <control type="button">
                <left>1455</left>
                <top>135</top>
                <width>45</width>
                <height>60</height>
                <texturefocus>arrow-big-right.png</texturefocus>
                <texturenofocus>arrow-big-right.png</texturenofocus>
                <include>VisibleFadeEffect</include>
                <onclick>Control.Move($PARAM[Control],1)</onclick>
                <visible>[system.getbool(input.enablemouse) | Control.HasFocus($PARAM[Control])] + Container($PARAM[Control]).HasNext</visible>
                <include>VisibleFadeEffect</include>
            </control>
        </definition>
    </include>
    <include name="LargeWidgetEpisodeButtons">
        <param name="Control" default="8000" />
        <definition>
            <control type="button">
                <left>6</left>
                <top>150</top>
                <width>45</width>
                <height>60</height>
                <texturefocus>arrow-big-left.png</texturefocus>
                <texturenofocus>arrow-big-left.png</texturenofocus>
                <include>VisibleFadeEffect</include>
                <onclick>Control.Move($PARAM[Control],-1)</onclick>
                <visible>[system.getbool(input.enablemouse) | Control.HasFocus($PARAM[Control])] + Container($PARAM[Control]).HasPrevious</visible>
                <include>VisibleFadeEffect</include>
            </control>
            <control type="button">
                <left>1870</left>
                <top>150</top>
                <width>45</width>
                <height>60</height>
                <texturefocus>arrow-big-right.png</texturefocus>
                <texturenofocus>arrow-big-right.png</texturenofocus>
                <include>VisibleFadeEffect</include>
                <onclick>Control.Move($PARAM[Control],1)</onclick>
                <visible>[system.getbool(input.enablemouse) | Control.HasFocus($PARAM[Control])] + Container($PARAM[Control]).HasNext</visible>
                <include>VisibleFadeEffect</include>
            </control>
        </definition>
    </include>
    <include name="SmallWidgetAlbumButtons">
        <param name="Control" default="8000" />
        <definition>
            <control type="button">
                <left>-60</left>
                <top>135</top>
                <width>45</width>
                <height>60</height>
                <texturefocus>arrow-big-left.png</texturefocus>
                <texturenofocus>arrow-big-left.png</texturenofocus>
                <include>VisibleFadeEffect</include>
                <onclick>Control.Move($PARAM[Control],-1)</onclick>
                <visible>[system.getbool(input.enablemouse) | Control.HasFocus($PARAM[Control])] + Container($PARAM[Control]).HasPrevious</visible>
                <include>VisibleFadeEffect</include>
            </control>
            <control type="button">
                <left>1215</left>
                <top>135</top>
                <width>45</width>
                <height>60</height>
                <texturefocus>arrow-big-right.png</texturefocus>
                <texturenofocus>arrow-big-right.png</texturenofocus>
                <include>VisibleFadeEffect</include>
                <onclick>Control.Move($PARAM[Control],1)</onclick>
                <visible>[system.getbool(input.enablemouse) | Control.HasFocus($PARAM[Control])] + Container($PARAM[Control]).HasNext</visible>
                <include>VisibleFadeEffect</include>
            </control>
        </definition>
    </include>
    <include name="LargeWidgetAlbumButtons">
        <param name="Control" default="8000" />
        <definition>
            <control type="button">
                <left>6</left>
                <top>150</top>
                <width>45</width>
                <height>60</height>
                <texturefocus>arrow-big-left.png</texturefocus>
                <texturenofocus>arrow-big-left.png</texturenofocus>
                <include>VisibleFadeEffect</include>
                <onclick>Control.Move($PARAM[Control],-1)</onclick>
                <visible>[system.getbool(input.enablemouse) | Control.HasFocus($PARAM[Control])] + Container($PARAM[Control]).HasPrevious</visible>
                <include>VisibleFadeEffect</include>
            </control>
            <control type="button">
                <left>1870</left>
                <top>150</top>
                <width>45</width>
                <height>60</height>
                <texturefocus>arrow-big-right.png</texturefocus>
                <texturenofocus>arrow-big-right.png</texturenofocus>
                <include>VisibleFadeEffect</include>
                <onclick>Control.Move($PARAM[Control],1)</onclick>
                <visible>[system.getbool(input.enablemouse) | Control.HasFocus($PARAM[Control])] + Container($PARAM[Control]).HasNext</visible>
                <include>VisibleFadeEffect</include>
            </control>
        </definition>
    </include>
    <include name="RecentVideoContent">
        <content target="video"  sortorder="descending" sortby="dateadded" limit="10">videodb://movies/titles/?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22playcount%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%220%22%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</content>
    </include>
    <include name="RecentWithWatchedVideoContent">
        <content target="video"  sortorder="descending" sortby="dateadded" limit="10">videodb://movies/titles/</content>
    </include>    
    <include name="RandomVideoContent">
        <content sortby="random" sortorder="" limit="10" target="videos">videodb://movies/titles/?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22playcount%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%220%22%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</content>
    </include>
    <include name="SuggestedVideoContent">
        <!-- Suggested movies is just in-progress movies -->
        <content>videodb://movies/titles/?xsp=%7b%22limit%22%3a20%2c%22order%22%3a%7b%22direction%22%3a%22descending%22%2c%22ignorefolders%22%3a0%2c%22method%22%3a%22lastplayed%22%7d%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22inprogress%22%2c%22operator%22%3a%22true%22%2c%22value%22%3a%5b%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</content>
    </include>
    <include name="HomeUnWatchedMovies">
        <!-- This is just 10 unwatched movies, random -->
        <content sortby="random" sortorder="" limit="10" target="videos">videodb://movies/titles/?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22playcount%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%220%22%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</content>
    </include>
    <include name="RecentTVShowContent">
        <!-- 10 episodes, unwatched, newest first -->
        <content target="video" sortorder="descending" sortby="dateadded" limit="10">videodb://tvshows/titles/-1/-1/?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22playcount%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%220%22%7D%5D%7D%2C%22type%22%3A%22episodes%22%7D</content>
    </include>
    <include name="RecentWithWatchedTVShowContent">
        <!-- 10 episodes, unwatched, newest first -->
        <content target="video" sortorder="descending" sortby="dateadded" limit="10">videodb://tvshows/titles/-1/-1/</content>
    </include>    
    <include name="RandomTVShowContent">
        <content sortby="random" sortorder="" limit="10" target="videos">videodb://tvshows/titles/-1/-1/?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22playcount%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%220%22%7D%5D%7D%2C%22type%22%3A%22episodes%22%7D</content>
    </include>
    <include name="SuggestedTVShowContent">
        <content>
            <item id="1">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.1.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.1.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.1.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick condition="Window.IsVisible(2124)">Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.1.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.1.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.1.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.1.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.1.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.1.TVshowTitle))</visible>
            </item>
            <item id="2">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.2.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.2.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.2.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick condition="Window.IsVisible(2124)">Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.2.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.2.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.2.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.2.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.2.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.2.TVshowTitle))</visible>
            </item>
            <item id="3">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.3.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.3.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.3.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick condition="Window.IsVisible(2124)">Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.3.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.3.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.3.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.3.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.3.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.3.TVshowTitle))</visible>
            </item>
            <item id="4">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.4.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.4.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.4.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick condition="Window.IsVisible(2124)">Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.4.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.4.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.4.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.4.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.4.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.4.TVshowTitle))</visible>
            </item>
            <item id="5">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.5.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.5.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.5.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick condition="Window.IsVisible(2124)">Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.5.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.5.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.5.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.5.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.5.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.5.TVshowTitle))</visible>
            </item>
            <item id="6">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.6.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.6.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.6.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick condition="Window.IsVisible(2124)">Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.6.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.6.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.6.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.6.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.6.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.6.TVshowTitle))</visible>
            </item>
            <item id="7">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.7.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.7.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.7.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick condition="Window.IsVisible(2124)">Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.7.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.7.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.7.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.7.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.7.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.7.TVshowTitle))</visible>
            </item>
            <item id="8">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.8.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.8.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.8.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick condition="Window.IsVisible(2124)">Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.8.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.8.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.8.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.8.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.8.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.8.TVshowTitle))</visible>
            </item>
            <item id="9">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.9.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.9.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.9.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick condition="Window.IsVisible(2124)">Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.9.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.9.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.9.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.9.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.9.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.9.TVshowTitle))</visible>
            </item>
            <item id="10">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.10.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.10.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.10.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick condition="Window.IsVisible(2124)">Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.10.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.10.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.10.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.10.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.10.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.10.TVshowTitle))</visible>
            </item>
            <item id="11">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.11.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.11.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.11.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick>Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.11.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.11.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.11.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.11.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.11.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.11.TVshowTitle)) + Window.IsVisible(2124)</visible>
            </item>
            <item id="12">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.12.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.12.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.12.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick>Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.12.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.12.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.12.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.12.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.12.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.12.TVshowTitle)) + Window.IsVisible(2124)</visible>
            </item>
            <item id="13">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.13.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.13.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.13.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick>Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.13.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.13.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.13.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.13.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.13.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.13.TVshowTitle)) + Window.IsVisible(2124)</visible>
            </item>
            <item id="14">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.14.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.14.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.14.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick>Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.14.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.14.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.14.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.14.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.14.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.14.TVshowTitle)) + Window.IsVisible(2124)</visible>
            </item>
            <item id="15">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.15.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.15.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.15.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick>Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.15.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.15.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.15.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.15.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.15.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.15.TVshowTitle)) + Window.IsVisible(2124)</visible>
            </item>
            <item id="16">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.16.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.16.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.16.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick>Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.16.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.16.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.16.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.16.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.16.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.16.TVshowTitle)) + Window.IsVisible(2124)</visible>
            </item>
            <item id="17">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.17.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.17.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.17.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick>Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.17.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.17.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.17.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.17.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.17.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.17.TVshowTitle)) + Window.IsVisible(2124)</visible>
            </item>
            <item id="18">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.18.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.18.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.18.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick>Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.18.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.18.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.18.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.18.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.18.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.18.TVshowTitle)) + Window.IsVisible(2124)</visible>
            </item>
            <item id="19">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.19.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.19.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.19.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick>Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.19.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.19.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.19.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.19.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.19.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.19.TVshowTitle)) + Window.IsVisible(2124)</visible>
            </item>
            <item id="20">
                <label>$INFO[Window(Home).Property(RecommendedEpisode.20.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecommendedEpisode.20.TVshowTitle)] - $INFO[Window(Home).Property(RecommendedEpisode.20.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick>Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecommendedEpisode.20.File)])</onclick>
                <thumb>$INFO[Window(Home).Property(RecommendedEpisode.20.Art(tvshow.fanart))]</thumb>
                <icon>$INFO[Window(Home).Property(RecommendedEpisode.20.Art(thumb))]</icon>
                <property name="Logo">$INFO[Window(Home).Property(RecommendedEpisode.20.Art(tvshow.clearlogo))]</property>
                <property name="PercentPlayed">$INFO[Window(Home).Property(RecommendedEpisode.20.PercentPlayed)]</property>
                <visible>!String.IsEmpty(Window(Home).Property(RecommendedEpisode.20.TVshowTitle)) + Window.IsVisible(2124)</visible>
            </item>
            <item id="21">
                <label>$INFO[Window(Home).Property(RecentEpisode.1.Title)]</label>
                <label2>$INFO[Window(Home).Property(RecentEpisode.1.TVshowTitle)] - $INFO[Window(Home).Property(RecentEpisode.1.EpisodeNo)]</label2>
                <onclick>PlayList.Clear</onclick>
                <onclick>Dialog.Close(2124)</onclick>
                <onclick>PlayMedia($ESCINFO[Window(Home).Property(RecentEpisode.1.File)])</onclick>
                <icon>$INFO[Window(Home).Property(RecentEpisode.1.Art(thumb))]</icon>
                <thumb>$INFO[Window(Home).Property(RecentEpisode.1.Art(tvshow.fanart))]</thumb>
                <property name="Logo">$INFO[Window(Home).Property(RecentEpisode.1.Art(tvshow.clearlogo))]</property>
                <visible>String.IsEmpty(Window(Home).Property(RecommendedEpisode.1.TVshowTitle)) + !String.IsEmpty(Window(Home).Property(RecentEpisode.1.TVshowTitle)) + Window.IsVisible(2124)</visible>
            </item>
        </content>
    </include>
    <include name="RecentAlbumContent">
        <content target="music" sortby="dateadded" sortorder="descending" limit="10">musicdb://recentlyaddedalbums</content>
    </include>
    <include name="RandomAlbumContent">
        <content sortby="random" sortorder="" limit="10" target="music">library://music/albums.xml/</content>
    </include>
    <include name="SuggestedAlbumContent">
        <!-- Suggested albums is the 20 most played albums -->
        <content target="music">musicdb://albums/?xsp=%7b%22limit%22%3a20%2c%22order%22%3a%7b%22direction%22%3a%22descending%22%2c%22ignorefolders%22%3a0%2c%22method%22%3a%22playcount%22%7d%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22playcount%22%2c%22operator%22%3a%22greaterthan%22%2c%22value%22%3a%5b%220%22%5d%7d%5d%7d%2c%22type%22%3a%22albums%22%7d</content>
    </include>
    <include name="RecentConcertContent">
        <content target="video"  sortorder="descending" sortby="dateadded" limit="10">videodb://musicvideos/titles/?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22playcount%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%220%22%7D%5D%7D%2C%22type%22%3A%22musicvideos%22%7D</content>
    </include>
    <include name="RecentWithWatchedConcertContent">
        <content target="video"  sortorder="descending" sortby="dateadded" limit="10">videodb://musicvideos/titles/</content>
    </include>    
    <include name="RandomConcertContent">
        <content target="video">videodb://musicvideos/titles/?xsp=%7b%22limit%22%3a10%2c%22order%22%3a%7b%22direction%22%3a%22ascending%22%2c%22ignorefolders%22%3a0%2c%22method%22%3a%22random%22%7d%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22playcount%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%220%22%5d%7d%5d%7d%2c%22type%22%3a%22musicvideos%22%7d</content>
    </include>
    <include name="SuggestedConcertContent">
        <!-- Suggested music videos is just 20 most played music videos -->
        <content target="video">videodb://musicvideos/titles/?xsp=%7b%22limit%22%3a20%2c%22order%22%3a%7b%22direction%22%3a%22descending%22%2c%22ignorefolders%22%3a0%2c%22method%22%3a%22playcount%22%7d%2c%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22playcount%22%2c%22operator%22%3a%22greaterthan%22%2c%22value%22%3a%5b%220%22%5d%7d%5d%7d%2c%22type%22%3a%22musicvideos%22%7d</content>
    </include>
    <include name="PlayListOneContent">
        <content target="video" limit="10" sortby="random" sortorder="">$INFO[Skin.String(HomeItem.1.Playlist)]</content>
    </include>
    <include name="PlayListTwoContent">
        <content target="video" limit="10" sortby="random" sortorder="">$INFO[Skin.String(HomeItem.2.Playlist)]</content>
    </include>
    <include name="PlayListThreeContent">
        <content target="video" limit="10" sortby="random" sortorder="">$INFO[Skin.String(HomeItem.3.Playlist)]</content>
    </include>
    <include name="PlayListFourContent">
        <content target="video" limit="10" sortby="random" sortorder="">$INFO[Skin.String(HomeItem.4.Playlist)]</content>
    </include>
    <include name="PlayListFiveContent">
        <content target="video" limit="10" sortby="random" sortorder="">$INFO[Skin.String(HomeItem.5.Playlist)]</content>
    </include>
    <include name="PlayListSixContent">
        <content target="video" limit="10" sortby="random" sortorder="">$INFO[Skin.String(HomeItem.6.Playlist)]</content>
    </include>
    <include name="PlayListSevenContent">
        <content target="video" limit="10" sortby="random" sortorder="">$INFO[Skin.String(HomeItem.7.Playlist)]</content>
    </include>
    <include name="PlayListEightContent">
        <content target="video" limit="10" sortby="random" sortorder="">$INFO[Skin.String(HomeItem.8.Playlist)]</content>
    </include>
    <include name="PlayListNineContent">
        <content target="video" limit="10" sortby="random" sortorder="">$INFO[Skin.String(HomeItem.9.Playlist)]</content>
    </include>
    <include name="PlayListTenContent">
        <content target="video" limit="10" sortby="random" sortorder="">$INFO[Skin.String(HomeItem.10.Playlist)]</content>
    </include>
    <include name="PlayListElevenContent">
        <content target="video" limit="10" sortby="random" sortorder="">$INFO[Skin.String(HomeItem.11.Playlist)]</content>
    </include>
    <include name="PlayListTwelveContent">
        <content target="video" limit="10" sortby="random" sortorder="">$INFO[Skin.String(HomeItem.12.Playlist)]</content>
    </include>
    <include name="PlayListThirteenContent">
        <content target="video" limit="10" sortby="random" sortorder="">$INFO[Skin.String(HomeItem.13.Playlist)]</content>
    </include>
    <include name="PlayListFourteenContent">
        <content target="video" limit="10" sortby="random" sortorder="">$INFO[Skin.String(HomeItem.14.Playlist)]</content>
    </include>
    <include name="PlayListFifteenContent">
        <content target="video" limit="10" sortby="random" sortorder="">$INFO[Skin.String(HomeItem.15.Playlist)]</content>
    </include>
    <include name="WeatherForecastContent">
        <content>
            <item>
                <label>$LOCALIZE[143]</label>
                <label2>$INFO[Window(Weather).Property(Current.Condition)]</label2>
                <onclick>Weather.Refresh</onclick>
                <icon>$VAR[WeatherIconPath]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherIconExt]</icon>
                <thumb>$VAR[WeatherFanartPath]$INFO[Window(Weather).Property(Current.FanartCode)]</thumb>
                <property name="Temperatures">[COLOR=grey2]$LOCALIZE[419] : [/COLOR]$INFO[Window(Weather).Property(Day0.HighTemp)]$INFO[System.TemperatureUnits]     [COLOR=grey2]$LOCALIZE[418] : [/COLOR]$INFO[Window(Weather).Property(Day0.LowTemp)]$INFO[System.TemperatureUnits]</property>
                <visible>!String.IsEqual(Skin.String(TopLeftHomeInfo),Weather)</visible>
            </item>
            <item>
                <label>$INFO[Window(Weather).Property(Day1.Title)]</label>
                <label2>$INFO[Window(Weather).Property(Day1.Outlook)]</label2>
                <onclick>Weather.Refresh</onclick>
                <icon>$VAR[WeatherIconPath]$INFO[Window(Weather).Property(Day1.FanartCode)]$VAR[WeatherIconExt]</icon>
                <thumb>$VAR[WeatherFanartPath]$INFO[Window(Weather).Property(Day1.FanartCode)]</thumb>
                <property name="Temperatures">[COLOR=grey2]$LOCALIZE[419] : [/COLOR]$INFO[Window(Weather).Property(Day1.HighTemp)]$INFO[System.TemperatureUnits]     [COLOR=grey2]$LOCALIZE[418] : [/COLOR]$INFO[Window(Weather).Property(Day1.LowTemp)]$INFO[System.TemperatureUnits]</property>
            </item>
            <item>
                <label>$INFO[Window(Weather).Property(Day2.Title)]</label>
                <label2>$INFO[Window(Weather).Property(Day2.Outlook)]</label2>
                <onclick>Weather.Refresh</onclick>
                <icon>$VAR[WeatherIconPath]$INFO[Window(Weather).Property(Day2.FanartCode)]$VAR[WeatherIconExt]</icon>
                <thumb>$VAR[WeatherFanartPath]$INFO[Window(Weather).Property(Day2.FanartCode)]</thumb>
                <property name="Temperatures">[COLOR=grey2]$LOCALIZE[419] : [/COLOR]$INFO[Window(Weather).Property(Day2.HighTemp)]$INFO[System.TemperatureUnits]     [COLOR=grey2]$LOCALIZE[418] : [/COLOR]$INFO[Window(Weather).Property(Day2.LowTemp)]$INFO[System.TemperatureUnits]</property>
            </item>
            <item>
                <label>$INFO[Window(Weather).Property(Day3.Title)]</label>
                <label2>$INFO[Window(Weather).Property(Day3.Outlook)]</label2>
                <onclick>Weather.Refresh</onclick>
                <icon>$VAR[WeatherIconPath]$INFO[Window(Weather).Property(Day3.FanartCode)]$VAR[WeatherIconExt]</icon>
                <thumb>$VAR[WeatherFanartPath]$INFO[Window(Weather).Property(Day3.FanartCode)]</thumb>
                <property name="Temperatures">[COLOR=grey2]$LOCALIZE[419] : [/COLOR]$INFO[Window(Weather).Property(Day3.HighTemp)]$INFO[System.TemperatureUnits]     [COLOR=grey2]$LOCALIZE[418] : [/COLOR]$INFO[Window(Weather).Property(Day3.LowTemp)]$INFO[System.TemperatureUnits]</property>
            </item>
            <item>
                <label>$INFO[Window(Weather).Property(Day4.Title)]</label>
                <label2>$INFO[Window(Weather).Property(Day4.Outlook)]</label2>
                <onclick>Weather.Refresh</onclick>
                <icon>$VAR[WeatherIconPath]$INFO[Window(Weather).Property(Day4.FanartCode)]</icon>
                <thumb>$VAR[WeatherFanartPath]$INFO[Window(Weather).Property(Day4.FanartCode)]</thumb>
                <property name="Temperatures">[COLOR=grey2]$LOCALIZE[419] : [/COLOR]$INFO[Window(Weather).Property(Day4.HighTemp)]$INFO[System.TemperatureUnits]     [COLOR=grey2]$LOCALIZE[418] : [/COLOR]$INFO[Window(Weather).Property(Day4.LowTemp)]$INFO[System.TemperatureUnits]</property>
                <visible>String.IsEqual(Skin.String(TopLeftHomeInfo),Weather)</visible>
            </item>
        </content>
    </include>
    
    <include name="EmbuaryInfoNextAiredContent">
        <content sortby="" sortorder="" limit="" target="videos">plugin://script.embuary.info/nextaired/week?reload=$INFO[Window(Home).Property(widgetreload)]</content>
    </include>
    
    
    <include name="NextAiredContent">
        <content>
            <item>
                <label>$INFO[Window(home).Property(NextAired.1.Label)] $INFO[Window(home).Property(NextAired.1.NextNumber)]</label>
                <label2>$INFO[Window(home).Property(NextAired.1.NextDay)] $INFO[Window(home).Property(NextAired.1.ShortTime)]</label2>
                <icon>$INFO[Window(home).Property(NextAired.1.Art(fanart))]</icon>
                <property name="Logo">$INFO[Window(home).Property(NextAired.1.Art(clearlogo))]</property>
                <onclick>ActivateWindow(Videos,$INFO[Window(home).Property(NextAired.1.Library)],return)</onclick>
                <visible>!String.IsEmpty(Window(home).Property(NextAired.1.NextDay))</visible>
            </item>
            <item>
                <label>$INFO[Window(home).Property(NextAired.2.Label)] $INFO[Window(home).Property(NextAired.2.NextNumber)]</label>
                <label2>$INFO[Window(home).Property(NextAired.2.NextDay)] $INFO[Window(home).Property(NextAired.2.ShortTime)]</label2>
                <icon>$INFO[Window(home).Property(NextAired.2.Art(fanart))]</icon>
                <property name="Logo">$INFO[Window(home).Property(NextAired.2.Art(clearlogo))]</property>
                <onclick>ActivateWindow(Videos,$INFO[Window(home).Property(NextAired.2.Library)],return)</onclick>
                <visible>!String.IsEmpty(Window(home).Property(NextAired.2.NextDay))</visible>
            </item>
            <item>
                <label>$INFO[Window(home).Property(NextAired.3.Label)] $INFO[Window(home).Property(NextAired.3.NextNumber)]</label>
                <label2>$INFO[Window(home).Property(NextAired.3.NextDay)] $INFO[Window(home).Property(NextAired.3.ShortTime)]</label2>
                <icon>$INFO[Window(home).Property(NextAired.3.Art(fanart))]</icon>
                <property name="Logo">$INFO[Window(home).Property(NextAired.3.Art(clearlogo))]</property>
                <onclick>ActivateWindow(Videos,$INFO[Window(home).Property(NextAired.3.Library)],return)</onclick>
                <visible>!String.IsEmpty(Window(home).Property(NextAired.3.NextDay))</visible>
            </item>
            <item>
                <label>$INFO[Window(home).Property(NextAired.4.Label)] $INFO[Window(home).Property(NextAired.4.NextNumber)]</label>
                <label2>$INFO[Window(home).Property(NextAired.4.NextDay)] $INFO[Window(home).Property(NextAired.4.ShortTime)]</label2>
                <icon>$INFO[Window(home).Property(NextAired.4.Art(fanart))]</icon>
                <property name="Logo">$INFO[Window(home).Property(NextAired.4.Art(clearlogo))]</property>
                <onclick>ActivateWindow(Videos,$INFO[Window(home).Property(NextAired.4.Library)],return)</onclick>
                <visible>!String.IsEmpty(Window(home).Property(NextAired.4.NextDay))</visible>
            </item>
            <item>
                <label>$INFO[Window(home).Property(NextAired.5.Label)] $INFO[Window(home).Property(NextAired.5.NextNumber)]</label>
                <label2>$INFO[Window(home).Property(NextAired.5.NextDay)] $INFO[Window(home).Property(NextAired.5.ShortTime)]</label2>
                <icon>$INFO[Window(home).Property(NextAired.5.Art(fanart))]</icon>
                <property name="Logo">$INFO[Window(home).Property(NextAired.5.Art(clearlogo))]</property>
                <onclick>ActivateWindow(Videos,$INFO[Window(home).Property(NextAired.5.Library)],return)</onclick>
                <visible>!String.IsEmpty(Window(home).Property(NextAired.5.NextDay))</visible>
            </item>
            <item>
                <label>$INFO[Window(home).Property(NextAired.6.Label)] $INFO[Window(home).Property(NextAired.6.NextNumber)]</label>
                <label2>$INFO[Window(home).Property(NextAired.6.NextDay)] $INFO[Window(home).Property(NextAired.6.ShortTime)]</label2>
                <icon>$INFO[Window(home).Property(NextAired.6.Art(fanart))]</icon>
                <property name="Logo">$INFO[Window(home).Property(NextAired.6.Art(clearlogo))]</property>
                <onclick>ActivateWindow(Videos,$INFO[Window(home).Property(NextAired.6.Library)],return)</onclick>
                <visible>!String.IsEmpty(Window(home).Property(NextAired.6.NextDay))</visible>
            </item>
            <item>
                <label>$INFO[Window(home).Property(NextAired.7.Label)] $INFO[Window(home).Property(NextAired.7.NextNumber)]</label>
                <label2>$INFO[Window(home).Property(NextAired.7.NextDay)] $INFO[Window(home).Property(NextAired.7.ShortTime)]</label2>
                <icon>$INFO[Window(home).Property(NextAired.7.Art(fanart))]</icon>
                <property name="Logo">$INFO[Window(home).Property(NextAired.7.Art(clearlogo))]</property>
                <onclick>ActivateWindow(Videos,$INFO[Window(home).Property(NextAired.7.Library)],return)</onclick>
                <visible>!String.IsEmpty(Window(home).Property(NextAired.7.NextDay))</visible>
            </item>
            <item>
                <label>$INFO[Window(home).Property(NextAired.8.Label)] $INFO[Window(home).Property(NextAired.8.NextNumber)]</label>
                <label2>$INFO[Window(home).Property(NextAired.8.NextDay)] $INFO[Window(home).Property(NextAired.8.ShortTime)]</label2>
                <icon>$INFO[Window(home).Property(NextAired.8.Art(fanart))]</icon>
                <property name="Logo">$INFO[Window(home).Property(NextAired.8.Art(clearlogo))]</property>
                <onclick>ActivateWindow(Videos,$INFO[Window(home).Property(NextAired.8.Library)],return)</onclick>
                <visible>!String.IsEmpty(Window(home).Property(NextAired.8.NextDay))</visible>
            </item>
            <item>
                <label>$INFO[Window(home).Property(NextAired.9.Label)] $INFO[Window(home).Property(NextAired.9.NextNumber)]</label>
                <label2>$INFO[Window(home).Property(NextAired.9.NextDay)] $INFO[Window(home).Property(NextAired.9.ShortTime)]</label2>
                <icon>$INFO[Window(home).Property(NextAired.9.Art(fanart))]</icon>
                <property name="Logo">$INFO[Window(home).Property(NextAired.9.Art(clearlogo))]</property>
                <onclick>ActivateWindow(Videos,$INFO[Window(home).Property(NextAired.9.Library)],return)</onclick>
                <visible>!String.IsEmpty(Window(home).Property(NextAired.9.NextDay))</visible>
            </item>
            <item>
                <label>$INFO[Window(home).Property(NextAired.10.Label)] $INFO[Window(home).Property(NextAired.10.NextNumber)]</label>
                <label2>$INFO[Window(home).Property(NextAired.10.NextDay)] $INFO[Window(home).Property(NextAired.10.ShortTime)]</label2>
                <icon>$INFO[Window(home).Property(NextAired.10.Art(fanart))]</icon>
                <property name="Logo">$INFO[Window(home).Property(NextAired.10.Art(clearlogo))]</property>
                <onclick>ActivateWindow(Videos,$INFO[Window(home).Property(NextAired.10.Library)],return)</onclick>
                <visible>!String.IsEmpty(Window(home).Property(NextAired.10.NextDay))</visible>
            </item>
        </content>
    </include>
    <include name="CustomWidgetVisibility">
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentMovies)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentMoviesWatched)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RandomMovies)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),SuggestedMovies)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),VideoNode)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),UPnPMovies)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentEpisodes)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentEpisodesWatched)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RandomEpisodes)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),SuggestedEpisodes)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RandomArtists)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentAlbums)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RandomAlbums)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),SuggestedAlbums)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentConcerts)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RecentConcertsWatched)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),RandomConcerts)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),SuggestedConcerts)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),UnWatchedMovies)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),VideoPlayList)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),MusicPlayList)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),Weather)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),Favourites)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),NextAired)</visible>
        <visible>!String.IsEqual(Container(9000).ListItem.Property(WidgetSet),None)</visible>
        <visible>!Skin.String(Container(9000).ListItem.Property(WidgetSet))</visible>
    </include>
    <include name="UPnP_RecentMovies">
        <include condition="Skin.HasSetting(UPnP_Mode) + Skin.String(UPnPServer,Kodi) + String.IsEmpty(Skin.String(CustomWidgets))">UPnP_RecentMovies10</include>
        <include condition="Skin.HasSetting(UPnP_Mode) + Skin.String(UPnPServer,Kodi) + Skin.String(CustomWidgets,20)">UPnP_RecentMovies20</include>
        <include condition="Skin.HasSetting(UPnP_Mode) + Skin.String(UPnPServer,Kodi) + Skin.String(CustomWidgets,30)">UPnP_RecentMovies30</include>
        <include condition="Skin.HasSetting(UPnP_Mode) + Skin.String(UPnPServer,Kodi) + Skin.String(CustomWidgets,40)">UPnP_RecentMovies40</include>
        <include condition="Skin.HasSetting(UPnP_Mode) + Skin.String(UPnPServer,Kodi) + Skin.String(CustomWidgets,50)">UPnP_RecentMovies50</include>
        <include condition="Skin.HasSetting(UPnP_Mode) + Skin.String(UPnPServer,Kodi) + Skin.String(CustomWidgets,75)">UPnP_RecentMovies75</include>
        <include condition="Skin.HasSetting(UPnP_Mode) + Skin.String(UPnPServer,Kodi) + Skin.String(CustomWidgets,100)">UPnP_RecentMovies100</include>
    </include>
    <include name="UPnP_RecentMovies10">
        <content target="video" limit="10">$INFO[Skin.String(UPnP_Path)]library%3a%2f%2fvideo%2frecentlyaddedmovies.xml%2f/</content>
    </include>
    <include name="UPnP_RecentMovies20">
        <content target="video" limit="20">$INFO[Skin.String(UPnP_Path)]library%3a%2f%2fvideo%2frecentlyaddedmovies.xml%2f/</content>
    </include>
    <include name="UPnP_RecentMovies30">
        <content target="video" limit="30">$INFO[Skin.String(UPnP_Path)]library%3a%2f%2fvideo%2frecentlyaddedmovies.xml%2f/</content>
    </include>
    <include name="UPnP_RecentMovies40">
        <content target="video" limit="40">$INFO[Skin.String(UPnP_Path)]library%3a%2f%2fvideo%2frecentlyaddedmovies.xml%2f/</content>
    </include>
    <include name="UPnP_RecentMovies50">
        <content target="video" limit="50">$INFO[Skin.String(UPnP_Path)]library%3a%2f%2fvideo%2frecentlyaddedmovies.xml%2f/</content>
    </include>
    <include name="UPnP_RecentMovies75">
        <content target="video" limit="75">$INFO[Skin.String(UPnP_Path)]library%3a%2f%2fvideo%2frecentlyaddedmovies.xml%2f/</content>
    </include>
    <include name="UPnP_RecentMovies100">
        <content target="video" limit="100">$INFO[Skin.String(UPnP_Path)]library%3a%2f%2fvideo%2frecentlyaddedmovies.xml%2f/</content>
    </include>
    <include name="VideoNodeContent">
        <include condition="String.IsEmpty(Skin.String(CustomWidgets))">VideoNodeContent10</include>
        <include condition="Skin.String(CustomWidgets,20)">VideoNodeContent20</include>
        <include condition="Skin.String(CustomWidgets,30)">VideoNodeContent30</include>
        <include condition="Skin.String(CustomWidgets,40)">VideoNodeContent40</include>
        <include condition="Skin.String(CustomWidgets,50)">VideoNodeContent50</include>
        <include condition="Skin.String(CustomWidgets,75)">VideoNodeContent75</include>
        <include condition="Skin.String(CustomWidgets,100)">VideoNodeContent100</include>
    </include>
    <include name="VideoNodeContent10">
        <content target="video" limit="10">$VAR[VideoNodeContent]</content>
    </include>
    <include name="VideoNodeContent20">
        <content target="video" limit="20">$VAR[VideoNodeContent]</content>
    </include>
    <include name="VideoNodeContent30">
        <content target="video" limit="30">$VAR[VideoNodeContent]</content>
    </include>
    <include name="VideoNodeContent40">
        <content target="video" limit="40">$VAR[VideoNodeContent]</content>
    </include>
    <include name="VideoNodeContent50">
        <content target="video" limit="50">$VAR[VideoNodeContent]</content>
    </include>
    <include name="VideoNodeContent75">
        <content target="video" limit="75">$VAR[VideoNodeContent]</content>
    </include>
    <include name="VideoNodeContent100">
        <content target="video" limit="100">$VAR[VideoNodeContent]</content>
    </include>
    <include name="CustomWidgetContent">
        <include condition="String.IsEmpty(Skin.String(CustomWidgets))">CustomWidgetContent10</include>
        <include condition="Skin.String(CustomWidgets,20)">CustomWidgetContent20</include>
        <include condition="Skin.String(CustomWidgets,30)">CustomWidgetContent30</include>
        <include condition="Skin.String(CustomWidgets,40)">CustomWidgetContent40</include>
        <include condition="Skin.String(CustomWidgets,50)">CustomWidgetContent50</include>
        <include condition="Skin.String(CustomWidgets,75)">CustomWidgetContent75</include>
        <include condition="Skin.String(CustomWidgets,100)">CustomWidgetContent100</include>
    </include>
    <include name="CustomWidgetContent10">
        <content target="videos" limit="10">$INFO[Container(9000).ListItem.Property(WidgetSet)]</content>
    </include>
    <include name="CustomWidgetContent20">
        <content target="videos" limit="20">$INFO[Container(9000).ListItem.Property(WidgetSet)]</content>
    </include>
    <include name="CustomWidgetContent30">
        <content target="videos" limit="30">$INFO[Container(9000).ListItem.Property(WidgetSet)]</content>
    </include>
    <include name="CustomWidgetContent40">
        <content target="videos" limit="40">$INFO[Container(9000).ListItem.Property(WidgetSet)]</content>
    </include>
    <include name="CustomWidgetContent50">
        <content target="videos" limit="50">$INFO[Container(9000).ListItem.Property(WidgetSet)]</content>
    </include>
    <include name="CustomWidgetContent75">
        <content target="videos" limit="75">$INFO[Container(9000).ListItem.Property(WidgetSet)]</content>
    </include>
    <include name="CustomWidgetContent100">
        <content target="videos" limit="100">$INFO[Container(9000).ListItem.Property(WidgetSet)]</content>
    </include>
</includes>
